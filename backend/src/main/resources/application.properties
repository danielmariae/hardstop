# CORS
quarkus.http.cors=true
quarkus.http.cors.origins=http://localhost:4200
# quarkus.http.cors.origins=*
quarkus.http.cors.methods=GET,PUT,POST,PATCH,DELETE
quarkus.http.cors.exposed-headers=Content-Disposition
quarkus.http.cors.access-control-max-age=24H
quarkus.http.cors.access-control-allow-credentials=true
quarkus.http.cors.headers=Authorization,Content-Type

# ram limiter QUARKUS
quarkus.native.native-image-xmx=2G

# configuracao do bd
quarkus.datasource.db-kind = postgresql
quarkus.datasource.username = topicos2
quarkus.datasource.password = 123456
quarkus.datasource.jdbc.url = jdbc:postgresql://localhost:5432/topicos2db
quarkus.hibernate-orm.database.generation=drop-and-create

# configuracao do jwt
mp.jwt.verify.publickey.location=token/publicKey.pem
mp.jwt.verify.issuer=hardstop-jwt
smallrye.jwt.sign.key.location=token/privateKey.pem

## configuracao do Kafka
## The Kafka broker location (defaults to localhost:9092)
# kafka.bootstrap.servers=localhost:9092
#
## Configurando o produtor (escrevendo para o Kafka)
#mp.messaging.outgoing.card-out.connector=smallrye-kafka
#mp.messaging.outgoing.card-out.topic=cardRetorno
#mp.messaging.outgoing.card-out.key.serializer=org.apache.kafka.common.serialization.IntegerSerializer
#mp.messaging.outgoing.card-out.value.serializer=org.apache.kafka.common.serialization.StringSerializer
#
## Configurando o canal consumidor (lendo do Kafka)
#mp.messaging.incoming.card-in.connector=smallrye-kafka
#mp.messaging.incoming.card-in.topic=card
##mp.messaging.incoming.card-in.key.deserializer=org.apache.kafka.common.serialization.IntegerDeserializer
##mp.messaging.incoming.card-in.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer
##mp.messaging.incoming.card-in.auto.offset.reset=earliest

